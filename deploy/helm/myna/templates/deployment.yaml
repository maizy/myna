apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myna.fullname" . }}
  labels:
    {{- include "myna.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "myna.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myna.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myna.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: SPRING_DATASOURCE_URL
              value: 'jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/myna'
            - name: SPRING_DATASOURCE_USERNAME
              value: '{{ .Values.postgresql.auth.username }}'
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '{{ .Release.Name }}-postgresql'
                  key: password
            - name: SPRING_REDIS_HOST
              value: '{{ .Release.Name }}-redis-master'
            - name: SPRING_REDIS_PORT
              value: '6379'
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '{{ .Release.Name }}-redis'
                  key: redis-password
            - name: MYNA_BASEURI_SCHEME
              value: 'http{{ if .Values.ingress.tls }}s{{ end }}'
            - name: MYNA_BASEURI_HOST
              value: '{{ (index .Values.ingress.hosts 0).host }}'
            - name: MYNA_BASEURI_PORT
              value: '{{ if .Values.ingress.tls }}433{{else}}80{{ end }}'

      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
